package com.xms.oop.basic.day02;
/**
 * 位运算
 * @author Administrator
 *
 */
public class OperatorDemo06 {
	public static void main(String[] args) {
//		左移 <<   a<<b=a*2^b
//		 00001010
//	  00 00101000
		System.out.println(10<<2);//40=10*2^2
		
//		有符号右移
//		10000000 00000000 00000000 00001010   源码
//		11111111 11111111 11111111 11110101   反码
//		11111111 11111111 11111111 11110110   补码
//		1111111111 11111111 11111111 11110110  >>2
//		1111111111 11111111 11111111 111100   反码
//		1000000000 00000000 00000000 000011   源码  -3
		System.out.println(-10>>2);
//	    
//		无符号右移
//		10000000 00000000 00000000 00001010   源码
//		11111111 11111111 11111111 11110101   反码
//		11111111 11111111 11111111 11110110   补码
//		0011111111 11111111 11111111 11110110  >>2 转成正数了，正数源、补、反相同。
//		0011111111 11111111 11111111 111101   反码
//		0011111111 11111111 11111111 111101   源码  -3
		System.out.println(-10>>>2);
		
//		位与
//		0000101
//		0000011
//		0000001
		System.out.println(5&3);//1
	
//		位或
//		0000101
//		0000011
//		0000111
		System.out.println(5|3);//7
	
		
//		异或
//		0000101
//		0000011
//		0000110
		System.out.println(5|3);//6
		
//		取反
//		00000000 00000000 00000000 00000010  2
//		11111111 11111111 11111111 11111101 ~2 补码
//		11111111 11111111 11111111 11111100  反码
//		10000000 00000000 00000000 00000011
		System.out.println(~2);//-3
	}
}
